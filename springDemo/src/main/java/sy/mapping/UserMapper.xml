<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sy.dao.UserMapper">
	<resultMap id="BaseResultMap" type="sy.model.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
		<result column="unit" property="unit" jdbcType="VARCHAR" />
		<result column="policeId" property="policeid" jdbcType="VARCHAR" />
		<result column="idCard" property="idcard" jdbcType="VARCHAR" />
		<result column="lastLoginIp" property="lastloginip" jdbcType="VARCHAR" />
		<result column="lastLoginTime" property="lastlogintime"
			jdbcType="TIMESTAMP" />
		<result column="officePhone" property="officephone" jdbcType="VARCHAR" />
		<result column="mobilePhone" property="mobilephone" jdbcType="VARCHAR" />
		<result column="mailbox" property="mailbox" jdbcType="VARCHAR" />
		<result column="roleId" property="roleid" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, account, password, name, sex, description, createTime, updateTime,
		unit, policeId,
		idCard, lastLoginIp, lastLoginTime, officePhone, mobilePhone, mailbox, roleId
	</sql>
	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"></include>
		from user
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="sy.model.User">
		insert into user (id, account, password,
		name, sex, description,
		createTime, updateTime, unit,
		policeId, idCard, lastLoginIp,
		lastLoginTime, officePhone, mobilePhone,
		mailbox, roleId)
		values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
		#{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP},
		#{unit,jdbcType=VARCHAR},
		#{policeid,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{lastloginip,jdbcType=VARCHAR},
		#{lastlogintime,jdbcType=TIMESTAMP}, #{officephone,jdbcType=VARCHAR},
		#{mobilephone,jdbcType=VARCHAR},
		#{mailbox,jdbcType=VARCHAR}, #{roleid,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="sy.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="account != null">
				account,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="createtime != null">
				createTime,
			</if>
			<if test="updatetime != null">
				updateTime,
			</if>
			<if test="unit != null">
				unit,
			</if>
			<if test="policeid != null">
				policeId,
			</if>
			<if test="idcard != null">
				idCard,
			</if>
			<if test="lastloginip != null">
				lastLoginIp,
			</if>
			<if test="lastlogintime != null">
				lastLoginTime,
			</if>
			<if test="officephone != null">
				officePhone,
			</if>
			<if test="mobilephone != null">
				mobilePhone,
			</if>
			<if test="mailbox != null">
				mailbox,
			</if>
			<if test="roleid != null">
				roleId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="unit != null">
				#{unit,jdbcType=VARCHAR},
			</if>
			<if test="policeid != null">
				#{policeid,jdbcType=VARCHAR},
			</if>
			<if test="idcard != null">
				#{idcard,jdbcType=VARCHAR},
			</if>
			<if test="lastloginip != null">
				#{lastloginip,jdbcType=VARCHAR},
			</if>
			<if test="lastlogintime != null">
				#{lastlogintime,jdbcType=TIMESTAMP},
			</if>
			<if test="officephone != null">
				#{officephone,jdbcType=VARCHAR},
			</if>
			<if test="mobilephone != null">
				#{mobilephone,jdbcType=VARCHAR},
			</if>
			<if test="mailbox != null">
				#{mailbox,jdbcType=VARCHAR},
			</if>
			<if test="roleid != null">
				#{roleid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="sy.model.User">
		update user
		<set>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				updateTime = #{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="unit != null">
				unit = #{unit,jdbcType=VARCHAR},
			</if>
			<if test="policeid != null">
				policeId = #{policeid,jdbcType=VARCHAR},
			</if>
			<if test="idcard != null">
				idCard = #{idcard,jdbcType=VARCHAR},
			</if>
			<if test="lastloginip != null">
				lastLoginIp = #{lastloginip,jdbcType=VARCHAR},
			</if>
			<if test="lastlogintime != null">
				lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
			</if>
			<if test="officephone != null">
				officePhone = #{officephone,jdbcType=VARCHAR},
			</if>
			<if test="mobilephone != null">
				mobilePhone = #{mobilephone,jdbcType=VARCHAR},
			</if>
			<if test="mailbox != null">
				mailbox = #{mailbox,jdbcType=VARCHAR},
			</if>
			<if test="roleid != null">
				roleId = #{roleid,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="sy.model.User">
		update user
		set account = #{account,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		createTime = #{createtime,jdbcType=TIMESTAMP},
		updateTime = #{updatetime,jdbcType=TIMESTAMP},
		unit = #{unit,jdbcType=VARCHAR},
		policeId = #{policeid,jdbcType=VARCHAR},
		idCard = #{idcard,jdbcType=VARCHAR},
		lastLoginIp = #{lastloginip,jdbcType=VARCHAR},
		lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
		officePhone = #{officephone,jdbcType=VARCHAR},
		mobilePhone = #{mobilephone,jdbcType=VARCHAR},
		mailbox = #{mailbox,jdbcType=VARCHAR},
		roleId = #{roleid,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>